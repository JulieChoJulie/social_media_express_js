extends layout

block content
    .timeline
        if user
            div
                form#twit-form(action='/post' method='post' enctype='multipart/form-data')
                    .input-group
                        textarea#twit(name='content' maxlength=140)
                        .img-preview
                            img#img-preview(src='' style='display: none;' width='250' alt='Preview')
                            input#img-url(type='hidden' name='url')
                        div
                            label#img-label(for='img') Photo Upload
                            input#img(type='file' accept='image/*')
                            button#twit-btn.btn(type='submit') Twit
            .twits
                form#hashtag-form(action='/post/hashtag')
                    input(type='text' name='hashtag' placeholder='Search tag')
                    button.btn Search
                for twit in twits
                    .twit
                        input.twit-user-id(type='hidden' value=twit.user.id)
                        input.twit-id(type='hidden' value=twit.id)
                        .twit-author= twit.user.nick
                        -const follow = user && user.Followings.map(f  => f.id).includes(twit.user.id);
                        if user && user.id !== twit.user.id && !follow
                            button.twit-follow Follow
                        if user && user.id !== twit.user.id && follow
                            button.twit-unfollow Unfollow
                        -const like = twit && twit.Liker.map(t => t.id).includes(user.id);
                        if user && !like
                            button.twit-like Like
                        else if user && like
                            button.twit-unlike Unlike
                        .twit-content= twit.content
                        if twit.img
                            .twit-img
                                img(src=twit.img alt='Thumbnail')
    script.
        if(document.getElementById('img')) {
            document.getElementById('img').addEventListener('change', function(e) {
                var formData = new FormData();
                console.log(this, this.files);
                formData.append('img', this.files[0])
                var xhr = new XMLHttpRequest();
                xhr.onload = function () {
                    if(xhr.status === 200) {
                        var url = JSON.parse(xhr.responseText).url;
                        document.getElementById('img-url').value = url;
                        document.getElementById('img-preview').src = url;
                        document.getElementById('img-preview').style.display = 'inline';
                    } else {
                        console.error(xhr.responseText);
                    }
                };
                xhr.open('POST', '/post/img');
                xhr.send(formData);
            });
        }
        document.querySelectorAll('.twit-follow').forEach(function(tag) {
            tag.addEventListener('click', function(){
                var isLoggedIn = document.querySelector('#my-id');
                if(isLoggedIn) {
                    var userId = this.parentNode.querySelector('.twit-user-id').value;
                    console.log(userId);
                    var myId = isLoggedIn.value;
                    if (myId !== userId) {
                        if(confirm('Do you want to follow?')){
                            var xhr = new XMLHttpRequest();
                            xhr.onload = function() {
                                if (xhr.status === 200 ){
                                    location.reload();
                                } else {
                                    console.error(xhr.responseText);
                                }
                            };
                            xhr.open('POST', '/user/' + userId + '/follow');
                            xhr.send();
                        }
                    }
                }
            })
        });

        document.querySelectorAll('.twit-unfollow').forEach(function (tag) {
            tag.addEventListener('click', function () {
                var isLoggedIn = document.querySelector('#my-id');
                if (isLoggedIn) {
                    var userId = this.parentNode.querySelector('.twit-user-id').value;
                    var myId = isLoggedIn.value;
                    if (myId !== userId) {
                        if (confirm('Do you want to unfollow?')) {
                            var xhr = new XMLHttpRequest();
                            xhr.onload = function () {
                                if (xhr.status === 200) {
                                    location.reload();
                                } else {
                                    console.error(xhr.responseText);
                                }
                            };
                            xhr.open('POST', '/user/' + userId + '/unfollow');
                            xhr.send();
                        }
                    }
                }
            })
        });

        document.querySelectorAll('.twit-like').forEach(function (tag) {
            tag.addEventListener('click', function () {
                var isLoggedIn = document.querySelector('#my-id');
                if (isLoggedIn) {
                    var twitId = this.parentNode.querySelector('.twit-id').value;
                    var xhr = new XMLHttpRequest();
                    xhr.onload = function () {
                        if (xhr.status === 200) {
                            location.reload();
                        } else {
                            console.error(xhr.responseText);
                        }
                    };
                    xhr.open('POST', '/post/' + twitId + '/like');
                    xhr.send();
                }
            })
        });

        document.querySelectorAll('.twit-unlike').forEach(function (tag) {
            tag.addEventListener('click', function () {
                var isLoggedIn = document.querySelector('#my-id');
                if (isLoggedIn) {
                    var twitId = this.parentNode.querySelector('.twit-id').value;
                    var xhr = new XMLHttpRequest();
                    xhr.onload = function () {
                        if (xhr.status === 200) {
                            location.reload();
                        } else {
                            console.error(xhr.responseText);
                        }
                    };
                    xhr.open('DELETE', '/post/' + twitId + '/like');
                    xhr.send();
                }
            })
        });